Bringing machine 'app' up with 'virtualbox' provider...
Bringing machine 'api' up with 'virtualbox' provider...
Bringing machine 'test' up with 'virtualbox' provider...
==> app: Importing base box 'bento/ubuntu-16.04'...
[KProgress: 10%[KProgress: 20%[KProgress: 40%[KProgress: 50%[KProgress: 60%[KProgress: 80%[KProgress: 90%[K==> app: Matching MAC address for NAT networking...
==> app: Checking if box 'bento/ubuntu-16.04' is up to date...
==> app: A newer version of the box 'bento/ubuntu-16.04' is available! You currently
==> app: have version '2.2.9'. The latest is version '2.3.0'. Run
==> app: `vagrant box update` to update.
==> app: Setting the name of the VM: deploy_app_1477485602225_82121
==> app: Clearing any previously set network interfaces...
==> app: Preparing network interfaces based on configuration...
    app: Adapter 1: nat
==> app: Forwarding ports...
    app: 8000 (guest) => 8000 (host) (adapter 1)
    app: 22 (guest) => 2222 (host) (adapter 1)
==> app: Running 'pre-boot' VM customizations...
==> app: Booting VM...
==> app: Waiting for machine to boot. This may take a few minutes...
    app: SSH address: 127.0.0.1:2222
    app: SSH username: vagrant
    app: SSH auth method: private key
    app: 
    app: Vagrant insecure key detected. Vagrant will automatically replace
    app: this with a newly generated keypair for better security.
    app: 
    app: Inserting generated public key within guest...
    app: Removing insecure key from the guest if it's present...
    app: Key inserted! Disconnecting and reconnecting using new SSH key...
==> app: Machine booted and ready!
==> app: Checking for guest additions in VM...
    app: The guest additions on this VM do not match the installed version of
    app: VirtualBox! In most cases this is fine, but in rare cases it can
    app: prevent things such as shared folders from working properly. If you see
    app: shared folder errors, please make sure the guest additions within the
    app: virtual machine match the version of VirtualBox you have installed on
    app: your host and reload your VM.
    app: 
    app: Guest Additions Version: 5.0.26
    app: VirtualBox Version: 5.1
==> app: Setting hostname...
==> app: Rsyncing folder: /Users/mom24/rag-dashboard/deploy/ => /sync
==> app:   - Exclude: [".vagrant/", ".git", "node_modules", ".vagrant"]
==> app: Running provisioner: docker...
    app: Installing Docker onto machine...
==> app: Running provisioner: docker_compose...
    app: Checking for Docker Compose installation...
    app: Installing Docker Compose 1.8.0
    app: Symlinking Docker Compose 1.8.0
    app: Running docker-compose rm...
==> app: mesg: ttyname failed: Inappropriate ioctl for device
    app: No stopped containers
    app: Running docker-compose build...
==> app: mesg: ttyname failed: Inappropriate ioctl for device
==> app: Building app
    app: Step 1 : FROM node:6
    app: 6: Pulling from library/node
    app: Digest: sha256:57ca6f5fa900ea778394e857c6b1ed37437a526ab54b2fdc41605419ade1a5e7
    app: Status: Downloaded newer image for node:6
    app:  ---> ebf2f43db9c3
    app: Step 2 : MAINTAINER moses.martin@skybettingandgaming.com
    app:  ---> Running in c19738c7cdcd
    app:  ---> 2b11c1aabc36
    app: Removing intermediate container c19738c7cdcd
    app: Step 3 : WORKDIR /app
    app:  ---> Running in 9e1b921363ac
    app:  ---> 09d61a154d5a
    app: Removing intermediate container 9e1b921363ac
    app: Step 4 : COPY app/ .
    app:  ---> d35dfaead66f
    app: Removing intermediate container 58ee99568e03
    app: Step 5 : CMD sleep infinity
    app:  ---> Running in b6b3363ac361
    app:  ---> f10c2681a8f2
    app: Removing intermediate container b6b3363ac361
    app: Successfully built f10c2681a8f2
    app: Running docker-compose up...
==> app: mesg: ttyname failed: Inappropriate ioctl for device
==> app: Creating buildapp_app_1
==> api: Importing base box 'bento/ubuntu-16.04'...
[KProgress: 10%[KProgress: 20%[KProgress: 40%[KProgress: 50%[KProgress: 60%[KProgress: 70%[KProgress: 80%[KProgress: 90%[K==> api: Matching MAC address for NAT networking...
==> api: Checking if box 'bento/ubuntu-16.04' is up to date...
==> api: A newer version of the box 'bento/ubuntu-16.04' is available! You currently
==> api: have version '2.2.9'. The latest is version '2.3.0'. Run
==> api: `vagrant box update` to update.
==> api: Setting the name of the VM: deploy_api_1477485682322_58450
==> api: Fixed port collision for 22 => 2222. Now on port 2200.
==> api: Clearing any previously set network interfaces...
==> api: Preparing network interfaces based on configuration...
    api: Adapter 1: nat
==> api: Forwarding ports...
    api: 3080 (guest) => 3080 (host) (adapter 1)
    api: 22 (guest) => 2200 (host) (adapter 1)
==> api: Running 'pre-boot' VM customizations...
==> api: Booting VM...
==> api: Waiting for machine to boot. This may take a few minutes...
    api: SSH address: 127.0.0.1:2200
    api: SSH username: vagrant
    api: SSH auth method: private key
    api: 
    api: Vagrant insecure key detected. Vagrant will automatically replace
    api: this with a newly generated keypair for better security.
    api: 
    api: Inserting generated public key within guest...
    api: Removing insecure key from the guest if it's present...
    api: Key inserted! Disconnecting and reconnecting using new SSH key...
==> api: Machine booted and ready!
==> api: Checking for guest additions in VM...
    api: The guest additions on this VM do not match the installed version of
    api: VirtualBox! In most cases this is fine, but in rare cases it can
    api: prevent things such as shared folders from working properly. If you see
    api: shared folder errors, please make sure the guest additions within the
    api: virtual machine match the version of VirtualBox you have installed on
    api: your host and reload your VM.
    api: 
    api: Guest Additions Version: 5.0.26
    api: VirtualBox Version: 5.1
==> api: Setting hostname...
==> api: Rsyncing folder: /Users/mom24/rag-dashboard/deploy/ => /sync
==> api:   - Exclude: [".vagrant/", ".git", "node_modules", ".vagrant"]
==> api: Running provisioner: docker...
    api: Installing Docker onto machine...
==> api: Running provisioner: docker_compose...
    api: Checking for Docker Compose installation...
    api: Installing Docker Compose 1.8.0
    api: Symlinking Docker Compose 1.8.0
    api: Running docker-compose rm...
==> api: mesg: ttyname failed: Inappropriate ioctl for device
    api: No stopped containers
    api: Running docker-compose build...
==> api: mesg: ttyname failed: Inappropriate ioctl for device
==> api: Building api
    api: Step 1 : FROM node:6
    api: 6: Pulling from library/node
    api: Digest: sha256:57ca6f5fa900ea778394e857c6b1ed37437a526ab54b2fdc41605419ade1a5e7
    api: Status: Downloaded newer image for node:6
    api:  ---> ebf2f43db9c3
    api: Step 2 : MAINTAINER moses.martin@skybettingandgaming.com
    api:  ---> Running in 6b65945473f5
    api:  ---> a1347e0697b9
    api: Removing intermediate container 6b65945473f5
    api: Step 3 : WORKDIR /api
    api:  ---> Running in b212e7b3a1bc
    api:  ---> a7aedb4855b5
    api: Removing intermediate container b212e7b3a1bc
    api: Step 4 : COPY api/ .
    api:  ---> 285b779842b6
    api: Removing intermediate container b7c932878a29
    api: Step 5 : CMD sleep infinity
    api:  ---> Running in 08928ae3fc64
    api:  ---> 152d9ea079c1
    api: Removing intermediate container 08928ae3fc64
    api: Successfully built 152d9ea079c1
    api: Running docker-compose up...
==> api: mesg: 
==> api: ttyname failed
==> api: : 
==> api: Inappropriate ioctl for device
==> api: Creating buildapi_api_1
==> test: Importing base box 'bento/ubuntu-16.04'...
[KProgress: 10%[KProgress: 30%[KProgress: 40%[KProgress: 50%[KProgress: 60%[KProgress: 80%[KProgress: 90%[K==> test: Matching MAC address for NAT networking...
==> test: Checking if box 'bento/ubuntu-16.04' is up to date...
==> test: A newer version of the box 'bento/ubuntu-16.04' is available! You currently
==> test: have version '2.2.9'. The latest is version '2.3.0'. Run
==> test: `vagrant box update` to update.
==> test: Setting the name of the VM: deploy_test_1477485766217_41937
==> test: Fixed port collision for 22 => 2222. Now on port 2201.
==> test: Clearing any previously set network interfaces...
==> test: Preparing network interfaces based on configuration...
    test: Adapter 1: nat
==> test: Forwarding ports...
    test: 22 (guest) => 2201 (host) (adapter 1)
==> test: Running 'pre-boot' VM customizations...
==> test: Booting VM...
==> test: Waiting for machine to boot. This may take a few minutes...
    test: SSH address: 127.0.0.1:2201
    test: SSH username: vagrant
    test: SSH auth method: private key
    test: 
    test: Vagrant insecure key detected. Vagrant will automatically replace
    test: this with a newly generated keypair for better security.
    test: 
    test: Inserting generated public key within guest...
    test: Removing insecure key from the guest if it's present...
    test: Key inserted! Disconnecting and reconnecting using new SSH key...
==> test: Machine booted and ready!
==> test: Checking for guest additions in VM...
    test: The guest additions on this VM do not match the installed version of
    test: VirtualBox! In most cases this is fine, but in rare cases it can
    test: prevent things such as shared folders from working properly. If you see
    test: shared folder errors, please make sure the guest additions within the
    test: virtual machine match the version of VirtualBox you have installed on
    test: your host and reload your VM.
    test: 
    test: Guest Additions Version: 5.0.26
    test: VirtualBox Version: 5.1
==> test: Setting hostname...
==> test: Rsyncing folder: /Users/mom24/rag-dashboard/deploy/ => /sync
==> test:   - Exclude: [".vagrant/", ".git", "node_modules", ".vagrant"]
==> test: Running provisioner: docker...
    test: Installing Docker onto machine...
==> test: Running provisioner: docker_compose...
    test: Checking for Docker Compose installation...
    test: Installing Docker Compose 1.8.0
The provider for this Vagrant-managed machine is reporting that it
is not yet ready for SSH. Depending on your provider this can carry
different meanings. Make sure your machine is created and running and
try again. Additionally, check the output of `vagrant status` to verify
that the machine is in the state that you expect. If you continue to
get this error message, please view the documentation for the provider
you're using.
==> test: The previous process exited with exit code 1.
==> api: The previous process exited with exit code 1.
==> app: The previous process exited with exit code 1.
